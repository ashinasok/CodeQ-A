/*Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21

Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. 
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
*/


class Solution {
    func reverse(_ x: Int) -> Int {
        let negative = (x<0) ? true : false
        var xString = String(abs(x))
        xString = String(xString.reversed())
        var returnX = Int(xString)!
        if (negative == true){
            returnX = 0 - returnX
        }
        let int32Value = Int32(truncatingIfNeeded: returnX)
        if int32Value == returnX{
            return returnX
        }else{
            return 0
        }
    }
}
